version: '2.1'

services:
  postgres:
    image: postgres:9.6
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data:rw,z
      - ./docker/postgres:/docker-entrypoint-initdb.d:rw,z
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 40

  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq:rw,z
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      timeout: 5s
      interval: 5s
      retries: 40

  redis:
    image: redis
    volumes:
      - ./volumes/redis:/data:rw,z
    ports:
      - 6379:6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 40

  nginx:
    image: nginx:stable-alpine
    ports:
      - 8000:80
      - 3000:3000
    depends_on:
      - chat-api
      - ws-api
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./volumes/nginx:/var/log/nginx

  chat-api:
    image: node:10
    volumes:
      - ./chat-api:/chat-api:rw,z
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_HOST: '${POSTGRES_HOST}'
      POSTGRES_PORT: '${POSTGRES_PORT}'
      REDIS_HOST: '${REDIS_HOST}'
      REDIS_PORT: '${REDIS_PORT}'
      SESSION_NAME: '${SESSION_NAME}'
      SESSION_SECRET_KEY: '${SESSION_SECRET_KEY}'
      RABBITMQ_HOST: '${RABBITMQ_HOST}'
      RABBITMQ_PORT: '${RABBITMQ_PORT}'
      RABBITMQ_PROTOCOL: '${RABBITMQ_PROTOCOL}'
      RABBITMQ_USER: '${RABBITMQ_USER}'
      RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD}'
    working_dir: /chat-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      bash -c 'yarn install && yarn start'

  ws-api:
    image: node:10
    volumes:
      - ./ws-api:/ws-api:rw,z
    environment:
      REDIS_HOST: '${REDIS_HOST}'
      REDIS_PORT: '${REDIS_PORT}'
      RABBITMQ_HOST: '${RABBITMQ_HOST}'
      RABBITMQ_PORT: '${RABBITMQ_PORT}'
      RABBITMQ_PROTOCOL: '${RABBITMQ_PROTOCOL}'
      RABBITMQ_USER: '${RABBITMQ_USER}'
      RABBITMQ_PASSWORD: '${RABBITMQ_PASSWORD}'
    working_dir: /ws-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      bash -c 'yarn install && yarn start'
